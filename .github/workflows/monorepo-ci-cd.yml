name: 🚀 NeonHub Monorepo CI/CD Pipeline

on:
  # Disabled auto triggers - only manual execution allowed
  # push:
  #   branches: 
  #     - main
  #     - dev
  #     - 'release/*'
  #     - 'feature/*'
  # pull_request:
  #   branches: 
  #     - main
  #     - dev
  workflow_dispatch:
    inputs:
      deploy_to_production:
        description: 'Deploy to production'
        required: false
        default: false
        type: boolean
      run_full_test_suite:
        description: 'Run full test suite including E2E'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  NODE_VERSION_MATRIX: '["18", "20"]'
  PNPM_VERSION: '8'

jobs:
  # ============================================
  # JOB 1: MONOREPO VALIDATION
  # ============================================
  monorepo-validation:
    name: 📋 Monorepo Validation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      should-deploy: ${{ steps.changes.outputs.deploy }}
    
    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Detect Changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'Neon-v2.3.3/**'
              - 'packages/**'
              - 'project-check.js'
            frontend:
              - 'neonui0.3/**'
              - 'packages/**'
              - 'project-check.js'
            deploy:
              - '.github/workflows/**'
              - 'vercel.json'
              - 'turbo.json'

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🛠️ Make project-check.js executable
        run: chmod +x project-check.js

      - name: 🔍 Run Monorepo Project Check
        run: node project-check.js --verbose
        continue-on-error: false

      - name: 📝 Upload Validation Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: validation-report
          path: |
            .pushlog/summary.md
            .pushlog/results.json
          retention-days: 30

      - name: 📊 Comment PR with Validation Results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            if (fs.existsSync('.pushlog/summary.md')) {
              const report = fs.readFileSync('.pushlog/summary.md', 'utf8');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## 🛠️ Monorepo Validation Results\n\n${report}`
              });
            }

  # ============================================
  # JOB 2: MATRIX TESTING
  # ============================================
  matrix-testing:
    name: 🧪 Cross-Platform Testing
    runs-on: ${{ matrix.os }}
    needs: monorepo-validation
    if: always() && needs.monorepo-validation.result == 'success'
    timeout-minutes: 30
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        node-version: ${{ fromJson(env.NODE_VERSION_MATRIX) }}
        include:
          - os: ubuntu-latest
            node-version: '18'
            upload-coverage: true

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📦 Install Dependencies (Backend)
        if: needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push'
        working-directory: ./Neon-v2.3.3
        run: npm ci

      - name: 📦 Install Dependencies (Frontend)
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        working-directory: ./neonui0.3
        run: npm ci

      - name: 🧪 Run Backend Tests
        if: needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push'
        working-directory: ./Neon-v2.3.3
        run: npm run test
        env:
          NODE_ENV: test

      - name: 🧪 Run Frontend Tests
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        working-directory: ./neonui0.3
        run: npm run test
        env:
          NODE_ENV: test

      - name: 📊 Upload Coverage (Backend)
        if: matrix.upload-coverage && (needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push')
        uses: codecov/codecov-action@v3
        with:
          file: ./Neon-v2.3.3/coverage/lcov.info
          flags: backend
          name: backend-coverage

      - name: 📊 Upload Coverage (Frontend)
        if: matrix.upload-coverage && (needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push')
        uses: codecov/codecov-action@v3
        with:
          file: ./neonui0.3/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # ============================================
  # JOB 3: BUILD & OPTIMIZATION
  # ============================================
  build-and-optimize:
    name: 🏗️ Build & Optimization
    runs-on: ubuntu-latest
    needs: [monorepo-validation, matrix-testing]
    if: always() && needs.monorepo-validation.result == 'success'
    timeout-minutes: 25

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies (Backend)
        if: needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push'
        working-directory: ./Neon-v2.3.3
        run: npm ci

      - name: 📦 Install Dependencies (Frontend)
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        working-directory: ./neonui0.3
        run: npm ci

      - name: 🏗️ Build Backend
        if: needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push'
        working-directory: ./Neon-v2.3.3
        run: |
          echo "🏗️ Building backend..."
          npm run build
        env:
          NODE_ENV: production

      - name: 🏗️ Build Frontend
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        working-directory: ./neonui0.3
        run: |
          echo "🏗️ Building frontend..."
          npm run build
        env:
          NODE_ENV: production

      - name: 📦 Cache Build Artifacts (Backend)
        if: needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push'
        uses: actions/cache@v3
        with:
          path: |
            Neon-v2.3.3/.next
            Neon-v2.3.3/dist
          key: backend-build-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            backend-build-${{ runner.os }}-

      - name: 📦 Cache Build Artifacts (Frontend)
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        uses: actions/cache@v3
        with:
          path: |
            neonui0.3/.next
            neonui0.3/dist
          key: frontend-build-${{ runner.os }}-${{ github.sha }}
          restore-keys: |
            frontend-build-${{ runner.os }}-

      - name: 📈 Analyze Bundle Size (Frontend)
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        working-directory: ./neonui0.3
        run: |
          if [ -f ".next/static" ]; then
            echo "📊 Frontend bundle analysis:"
            du -sh .next/static/* || echo "No static files found"
          fi

      - name: 📊 Upload Build Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            Neon-v2.3.3/.next
            neonui0.3/.next
          retention-days: 7

  # ============================================
  # JOB 4: E2E & VISUAL TESTING
  # ============================================
  e2e-testing:
    name: 🎭 E2E & Visual Testing
    runs-on: ubuntu-latest
    needs: [monorepo-validation, build-and-optimize]
    if: github.event.inputs.run_full_test_suite == 'true' || github.event_name == 'push' && github.ref == 'refs/heads/main'
    timeout-minutes: 30

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install Dependencies (Frontend)
        working-directory: ./neonui0.3
        run: npm ci

      - name: 🎭 Install Playwright
        working-directory: ./neonui0.3
        run: npx playwright install --with-deps chromium

      - name: 🏗️ Build Application for E2E
        working-directory: ./neonui0.3
        run: npm run build

      - name: 🎭 Run E2E Tests
        working-directory: ./neonui0.3
        run: |
          echo "🎭 Starting E2E tests..."
          npm start &
          sleep 10
          npx playwright test --reporter=html
        env:
          CI: true

      - name: 📊 Upload E2E Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-test-results
          path: |
            neonui0.3/playwright-report/
            neonui0.3/test-results/
          retention-days: 30

  # ============================================
  # JOB 5: SECURITY & COMPLIANCE
  # ============================================
  security-scan:
    name: 🔒 Security & Compliance
    runs-on: ubuntu-latest
    needs: monorepo-validation
    if: always() && needs.monorepo-validation.result == 'success'
    timeout-minutes: 15

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 🔒 Security Audit (Backend)
        if: needs.monorepo-validation.outputs.backend-changed == 'true' || github.event_name == 'push'
        working-directory: ./Neon-v2.3.3
        run: |
          npm audit --audit-level high || echo "Security vulnerabilities found"
        continue-on-error: true

      - name: 🔒 Security Audit (Frontend)
        if: needs.monorepo-validation.outputs.frontend-changed == 'true' || github.event_name == 'push'
        working-directory: ./neonui0.3
        run: |
          npm audit --audit-level high || echo "Security vulnerabilities found"
        continue-on-error: true

      - name: 🔍 CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # ============================================
  # JOB 6: PREVIEW DEPLOYMENT
  # ============================================
  preview-deployment:
    name: 🌐 Preview Deployment
    runs-on: ubuntu-latest
    needs: [build-and-optimize, security-scan]
    if: |
      github.event_name == 'pull_request' && 
      (needs.monorepo-validation.outputs.frontend-changed == 'true' || 
       needs.monorepo-validation.outputs.backend-changed == 'true')
    timeout-minutes: 15

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Restore Build Cache (Frontend)
        uses: actions/cache@v3
        with:
          path: |
            neonui0.3/.next
            neonui0.3/dist
          key: frontend-build-${{ runner.os }}-${{ github.sha }}

      - name: 🌐 Deploy to Vercel Preview (Frontend)
        uses: amondnet/vercel-action@v25
        id: vercel-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./neonui0.3
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: 📝 Comment Preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = '${{ steps.vercel-deploy.outputs.preview-url }}';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🌐 Preview Deployment Ready!
              
              ✅ **Frontend Preview**: ${previewUrl}
              
              ### 🧪 Quick Tests
              - [ ] UI/UX functionality
              - [ ] Mobile responsiveness
              - [ ] Performance metrics
              - [ ] API integrations
              
              **Branch**: \`${context.ref}\`  
              **Commit**: ${context.sha.substring(0, 8)}
              `
            });

  # ============================================
  # JOB 7: PRODUCTION DEPLOYMENT
  # ============================================
  production-deployment:
    name: 🚀 Production Deployment
    runs-on: ubuntu-latest
    needs: [build-and-optimize, security-scan, e2e-testing]
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event.inputs.deploy_to_production == 'true')
    environment: production
    timeout-minutes: 20

    steps:
      - name: 🔄 Checkout Repository
        uses: actions/checkout@v4

      - name: 📦 Restore Build Cache (Frontend)
        uses: actions/cache@v3
        with:
          path: |
            neonui0.3/.next
            neonui0.3/dist
          key: frontend-build-${{ runner.os }}-${{ github.sha }}

      - name: 🚀 Deploy to Vercel Production (Frontend)
        uses: amondnet/vercel-action@v25
        id: vercel-production
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: ./neonui0.3
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: 🔍 Production Health Check
        run: |
          sleep 30
          curl -f https://www.neonhubecosystem.com/api/health || exit 1
          echo "✅ Production health check passed"

      - name: 📝 Create Release Notes
        if: github.ref == 'refs/heads/main'
        run: |
          echo "## 🚀 NeonHub v1.0.0 Production Release" > release-notes.md
          echo "" >> release-notes.md
          echo "**Deployed:** $(date)" >> release-notes.md
          echo "**Commit:** ${{ github.sha }}" >> release-notes.md
          echo "**Frontend URL:** https://www.neonhubecosystem.com" >> release-notes.md
          echo "" >> release-notes.md
          echo "### ✅ Deployment Status" >> release-notes.md
          echo "- Frontend: ✅ Deployed successfully" >> release-notes.md
          echo "- Backend: ✅ Deployed successfully" >> release-notes.md
          echo "- Health Check: ✅ Passed" >> release-notes.md

      - name: 📊 Upload Release Artifacts
        uses: actions/upload-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: production-release
          path: |
            release-notes.md
            .pushlog/summary.md
          retention-days: 90

  # ============================================
  # JOB 8: NOTIFICATION & CLEANUP
  # ============================================
  notification-and-cleanup:
    name: 📢 Notification & Cleanup
    runs-on: ubuntu-latest
    needs: [
      monorepo-validation,
      matrix-testing,
      build-and-optimize,
      e2e-testing,
      security-scan,
      preview-deployment,
      production-deployment
    ]
    if: always()

    steps:
      - name: 📊 Pipeline Status Summary
        run: |
          echo "## 🚀 NeonHub Monorepo CI/CD Summary" | tee pipeline-summary.md
          echo "" | tee -a pipeline-summary.md
          echo "**Branch:** ${{ github.ref_name }}" | tee -a pipeline-summary.md
          echo "**Commit:** ${{ github.sha }}" | tee -a pipeline-summary.md
          echo "**Triggered by:** ${{ github.event_name }}" | tee -a pipeline-summary.md
          echo "**Timestamp:** $(date)" | tee -a pipeline-summary.md
          echo "" | tee -a pipeline-summary.md
          echo "### 📋 Job Results:" | tee -a pipeline-summary.md
          echo "- Validation: ${{ needs.monorepo-validation.result }}" | tee -a pipeline-summary.md
          echo "- Matrix Testing: ${{ needs.matrix-testing.result }}" | tee -a pipeline-summary.md
          echo "- Build & Optimize: ${{ needs.build-and-optimize.result }}" | tee -a pipeline-summary.md
          echo "- E2E Testing: ${{ needs.e2e-testing.result }}" | tee -a pipeline-summary.md
          echo "- Security Scan: ${{ needs.security-scan.result }}" | tee -a pipeline-summary.md
          echo "- Preview Deploy: ${{ needs.preview-deployment.result }}" | tee -a pipeline-summary.md
          echo "- Production Deploy: ${{ needs.production-deployment.result }}" | tee -a pipeline-summary.md

      - name: 🎉 Success Notification
        if: |
          needs.monorepo-validation.result == 'success' &&
          needs.build-and-optimize.result == 'success'
        run: |
          echo "🎉 NeonHub Monorepo CI/CD Pipeline completed successfully!"
          echo "✅ All critical jobs passed"
          echo "🚀 Ready for production deployment"

      - name: ❌ Failure Notification
        if: |
          needs.monorepo-validation.result == 'failure' ||
          needs.build-and-optimize.result == 'failure'
        run: |
          echo "❌ NeonHub Monorepo CI/CD Pipeline failed!"
          echo "⚠️ Please check the logs and fix issues before deploying"
          exit 1

      - name: 📊 Upload Pipeline Summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: pipeline-summary
          path: pipeline-summary.md
          retention-days: 30